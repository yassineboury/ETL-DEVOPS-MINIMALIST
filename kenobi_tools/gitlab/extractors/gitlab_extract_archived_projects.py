"""
Extracteur de projets archiv√©s GitLab - VERSION ULTRA-SIMPLIFI√âE POWER BI
Extraction pure sans statistiques - Power BI s'en charge !
Complexit√© cognitive vis√©e: ‚â§ 8
"""
import pandas as pd
import gitlab as python_gitlab
from .common_project_utils import extract_all_projects


def extract_archived_projects(gl_client: python_gitlab.Gitlab) -> pd.DataFrame:
    """
    Extrait uniquement les projets archiv√©s - VERSION SIMPLIFI√âE
    
    Args:
        gl_client: Client GitLab authentifi√©
        
    Returns:
        DataFrame avec les projets archiv√©s uniquement
    """
    print("üì¶ Extraction des projets archiv√©s...")
    
    # Extraire tous les projets archiv√©s
    all_projects_df = extract_all_projects(gl_client, include_archived=True)
    
    if all_projects_df.empty:
        print("‚ö†Ô∏è Aucun projet trouv√©")
        return pd.DataFrame()
    
    # Filtrer uniquement les archiv√©s
    archive_condition = all_projects_df['archive'] == 'Oui' if 'archive' in all_projects_df.columns else pd.Series([False] * len(all_projects_df))
    path_condition = all_projects_df['nom_complet'].str.startswith('projets-archives/') if 'nom_complet' in all_projects_df.columns else pd.Series([False] * len(all_projects_df))
    
    archived_df = all_projects_df[archive_condition | path_condition].copy()
    
    # Assurer que c'est un DataFrame
    if not isinstance(archived_df, pd.DataFrame):
        archived_df = pd.DataFrame(archived_df)
    
    print(f"‚úÖ {len(archived_df)} projets archiv√©s extraits")
    print("üìã Donn√©es pr√™tes pour Power BI")
    
    return archived_df


if __name__ == "__main__":
    """Test simple du module"""
    import sys
    from pathlib import Path
    
    current_dir = Path(__file__).parent.parent
    sys.path.insert(0, str(current_dir))
    
    from ..client.gitlab_client import GitLabClient
    
    print("üß™ Test extraction projets archiv√©s - VERSION SIMPLIFI√âE")
    
    try:
        client = GitLabClient()
        gl = client.connect()
        
        df = extract_archived_projects(gl)
        print(f"üìä R√©sultat: {len(df)} projets archiv√©s")
        
        client.disconnect()
        print("‚úÖ Test termin√©")
        
    except Exception as e:
        print(f"‚ùå Erreur: {e}")
